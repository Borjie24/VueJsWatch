<template>
  <div class="container">
    <CommonPlot
      :plotData="plotData"
      :layout="layout"
      :config="config"
      :dynamicUpdate="generateDynamicData"
      :updateInterval="1000"
    />
    <div class="side-bar">
      <div class="color-bar" :style="{ backgroundColor: currentColor }">
        <span class="temperature-label">{{ currentTemperature.toFixed(1) }}째C</span>
      </div>
    </div>
  </div>
</template>

<script>
import { plotData, layout, tempData } from "./plotConfig.js";
import CommonPlot from "./CommonPlot.vue";

export default {
  components: { CommonPlot },
  data() {
    return {
      plotData: plotData, // Use imported plotData
      layout: layout,   // Use imported layout
      config: {},
      currentColor: "green",
      currentTemperature: 0,
      temperatureData: tempData, // Assuming tempData is an array of temperature values
    };
  },
  methods: {
    generateDynamicData(index) {
      // Ensure the index is within the bounds of the temperatureData array
      const temp = this.temperatureData[index % this.temperatureData.length]; // Loop back to the start if index exceeds array length

      // Update the side-bar color and temperature
      this.currentColor = temp > 40 ? "red" : temp < 10 ? "blue" : "green";
      this.currentTemperature = temp;

      // Prepare trace updates and layout adjustments
      const traceUpdates = {
        data: { x: [[index]], y: [[temp]] },
        traces: [0],
      };

      const layoutUpdates = index > 50 ? { "xaxis.range": [index - 50, index] } : {};

      return { traceUpdates, layoutUpdates };
    },
  },
};
</script>

<style scoped>
.container {
  display: flex;
  align-items: center;
}
.side-bar {
  width: 50px;
  height: 500px;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  margin-left: 10px;
}
.color-bar {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: background-color 0.5s ease;
  border-radius: 5px;
  position: relative;
}
.temperature-label {
  position: absolute;
  color: white;
  font-size: 14px;
  font-weight: bold;
  writing-mode: vertical-rl;
  text-orientation: mixed;
  text-shadow: 0 0 5px black;
}
</style>
------------------------------------
<template>
  <div ref="plot" class="plot-container"></div>
</template>

<script>
import Plotly from "plotly.js-dist";

export default {
  props: {
    plotData: {
      type: Array,
      required: true,
    },
    layout: {
      type: Object,
      required: true,
    },
    config: {
      type: Object,
      default: () => ({}),
    },
    updateInterval: {
      type: Number,
      default: 1000, // Default update interval is 1 second
    },
    dynamicUpdate: {
      type: Function,
      default: null,
    },
  },
  data() {
    return {
      intervalId: null,
      index: 0,
    };
  },
  mounted() {
    this.initializePlot();
    if (this.dynamicUpdate) {
      this.startDynamicUpdates();
    }
  },
unmounted (){ clearInterval(thi.intervalId)}
  methods: {
   initializePlot() {
  const config = {
    ...this.config, // Retain any user-defined config properties
    scrollZoom: false,  // Disable zooming
    displayModeBar: false,  // Disable the mode bar (which includes reset, autoscale, etc.)
    responsive: true,  // Optional: Make the plot responsive to container resizing
  };

  Plotly.newPlot(this.$refs.plot, this.plotData, this.layout, config);
},
    updatePlot(traceUpdates, layoutUpdates = {}) {
      if (traceUpdates) {
        Plotly.extendTraces(this.$refs.plot, traceUpdates.data, traceUpdates.traces);
      }
      if (Object.keys(layoutUpdates).length > 0) {
        Plotly.relayout(this.$refs.plot, layoutUpdates);
      }
    },
    startDynamicUpdates() {
      this.intervalId = setInterval(() => {
        const updateData = this.dynamicUpdate(this.index);
        if (updateData) {
          this.updatePlot(updateData.traceUpdates, updateData.layoutUpdates);
          this.index++;
        }
      }, this.updateInterval);
    },
  },
};
</script>

<style scoped>
.plot-container {
  width: 100%;
  height: 500px;
}
</style>
------------------------------------------------
export const plotData = [
  {
    x: [],
    y: [],
    type: 'scatter',
    mode: 'lines+markers',
    name: 'Temperature',
    marker: { color: 'black' },
    line: { color: 'black' },
  },
  {
    x: [0, 1000],
    y: [10, 10],
    type: 'line',
    name: '10째C Threshold',
    line: { color: 'blue', dash: 'dash' },
  },
  {
    x: [0, 1000],
    y: [40, 40],
    type: 'line',
    name: '40째C Threshold',
    line: { color: 'red', dash: 'dash' },
  },
];

export const layout = {
  title: 'Temperature Data',
  xaxis: { title: 'Time (seconds)', range: [0, 50] },
  yaxis: { title: 'Temperature (째C)', range: [0, 100] },
  legend: { orientation: 'h', x: 0, y: -0.2 },
};

export const tempData = [
  40.5, 15.8, 27.6, 39.3, 26.5, 68.7, 57.7, 33.2, 72.3, 64.3, 69.9, 39.4, 50.0,
  24.0, 37.0, 21.7, 97.0, 90.7, 71.6, 22.9, 62.5, 51.4, 54.9, 36.3, 72.7, 61.8,
  90.2, 63.2, 77.9, 74.5, 48.6, 93.2, 51.8, 23.3, 74.8, 59.8, 38.6, 11.2, 22.9,
  35.3, 76.3, 52.6, 31.7, 21.1, 66.7, 10.3, 51.5, 72.3, 26.5, 2.1, 43.0, 93.2,
  38.0, 20.3, 31.4, 46.2, 84.1, 45.0, 73.2, 48.5, 92.6, 14.4, 47.5, 41.7, 58.1,
  77.7, 59.7, 69.8, 45.7, 13.3, 82.2, 77.5, 86.4, 29.0, 3.0, 46.1, 69.1, 83.7,
  17.0, 3.8, 86.8, 76.6, 95.8, 50.7, 86.0, 13.4, 46.2, 84.2, 97.3, 1.2, 87.3,
  60.8, 7.9, 58.1, 54.9, 38.5, 97.5, 39.8, 61.3, 74.9, 85.5, 18.7, 38.8, 83.8,
  85.8, 14.3, 87.2, 51.5, 77.6, 25.9, 78.9, 1.8, 19.3, 59.6, 48.9, 3.3, 11.1,
  11.0, 85.8, 22.3, 98.9, 75.0, 49.3, 18.9, 25.7, 46.9, 62.4, 14.8, 2.5, 57.3,
  56.1, 72.7, 77.8, 66.8, 2.1, 16.8, 6.4, 37.2, 85.4, 3.2, 19.9, 83.6, 38.0,
  92.9, 94.9, 59.2, 15.2, 24.0, 5.8, 91.2, 88.3, 9.1, 90.9, 84.5, 79.0, 69.8,
  25.9, 74.4, 7.6, 40.2, 43.2, 42.1, 2.0, 87.8, 24.3, 78.0, 98.0, 33.2, 12.0,
  11.5, 23.6, 65.0, 85.0, 29.4, 79.1, 72.3, 47.3, 58.2, 22.5, 5.4, 57.5, 90.6,
  50.1, 72.5, 24.6, 36.0, 72.2, 21.1, 99.0, 76.1, 40.9, 8.9, 16.4, 41.8, 32.5,
  7.8, 50.4, 64.2, 24.6, 51.3, 69.6, 59.0, 79.3, 25.5, 79.9, 78.4, 19.1, 60.0,
  16.4, 60.7, 3.7, 92.3, 54.3, 93.1, 25.1, 22.7, 27.3, 62.8, 43.1, 94.0, 37.9,
  77.4, 22.9, 26.0, 0.1, 1.6, 25.5, 6.4, 96.1, 99.3, 63.3, 23.4, 48.9, 11.2,
  48.4, 21.3, 66.9, 2.7, 16.9, 19.0, 30.5, 22.9, 56.7, 18.5, 86.6, 24.6, 67.1,
  15.4, 17.2, 61.3, 86.8, 67.0, 77.0, 76.5, 46.3, 60.1, 87.2, 19.3, 85.7, 51.9,
  74.6, 9.9, 0.3, 61.9, 49.7, 76.6, 65.3, 10.2, 93.7, 57.0, 61.4, 93.5, 52.5,
  88.2, 5.0, 94.0, 68.9, 22.2, 49.0, 95.6, 11.4, 22.9, 90.0, 46.8, 15.1, 11.9,
  23.4, 88.2, 14.9, 14.1, 92.9, 22.1, 17.7, 46.2, 43.1, 86.9, 76.6, 47.9, 52.0,
  54.0, 88.5, 19.3, 76.2, 64.1, 25.1, 2.8, 2.0, 17.6, 78.6, 94.6, 9.0, 80.5,
  75.8, 66.3, 9.6, 5.0, 76.7, 65.5, 55.6, 50.4, 1.8, 42.7, 87.9, 89.5, 10.4,
  45.8, 98.6, 12.5, 1.8, 46.4, 32.7, 33.5, 23.2, 72.6, 64.3, 98.5, 49.9, 33.2,
  37.5, 79.8, 86.8, 89.0, 17.2, 61.9, 41.6, 47.4, 54.3, 63.1, 84.2, 54.1, 11.7,
  4.9, 76.2, 48.2, 94.2, 66.1, 61.8, 97.2, 53.9, 58.0, 65.7, 50.7, 18.2, 15.9,
  58.2, 78.8, 94.6, 61.2, 53.8, 10.5, 30.6, 11.1, 27.9, 60.7, 74.7, 7.7, 85.0,
  83.7, 42.9, 61.0, 15.3, 52.4, 28.9, 73.5, 56.8, 3.8, 3.4, 52.5, 34.8, 81.4,
  51.2, 26.1, 0.1, 87.0, 36.6, 89.9, 20.2, 87.7, 3.0, 90.4, 11.3, 40.2, 65.0,
  19.4, 55.1, 98.0, 27.2, 29.2, 70.1, 84.6, 83.9, 26.7, 60.8, 9.6, 3.3, 47.4,
  17.0, 62.3, 51.2, 56.1, 47.0, 10.2, 80.1, 52.6, 59.4, 72.1, 48.2, 59.7, 56.2,
  5.5, 63.7, 9.0, 67.6, 36.5, 27.6, 44.0, 29.2, 12.5, 33.6, 55.9, 3.8, 20.5,
  33.7, 39.2, 45.2, 58.7, 18.7, 9.5, 13.9, 94.4, 90.9, 15.5, 54.0, 66.6, 96.0,
  68.8, 24.0, 28.7, 36.0, 44.5, 29.8, 51.3, 70.7, 87.4, 78.7, 79.9, 55.3, 89.0,
  63.1, 7.3, 63.0, 52.6, 62.6, 45.7, 71.2, 15.8, 74.9, 43.3, 85.5, 76.9, 15.9,
  68.3, 51.1, 0.4, 13.7, 50.9, 95.0, 15.2, 48.3, 75.1, 4.7, 4.0, 70.6, 70.5,
  98.6, 9.0, 99.8, 70.0, 44.8, 97.7, 3.5, 15.0, 48.2, 15.7, 5.4, 0.5, 48.1,
  31.3, 3.1, 35.6, 99.3, 32.1, 29.8, 20.7, 47.4, 92.9, 85.5, 60.6, 77.0, 34.2,
  95.1, 98.6, 93.6, 39.6, 96.8, 74.4, 87.0, 47.8, 45.9, 25.7, 50.6, 56.8, 28.9,
  34.5, 71.5, 16.8, 85.1, 68.8, 48.7, 25.3, 53.1, 25.5, 49.0, 45.8, 4.4, 5.2,
  5.9, 79.9, 21.8, 93.3, 61.6, 46.6, 87.2, 19.6, 41.7, 37.4, 33.7, 47.3, 90.0,
  10.5, 22.4, 81.1, 34.5, 73.3, 80.5, 54.0, 5.8, 90.2, 79.0, 71.1, 90.5, 96.5,
  68.6, 65.4, 77.9, 45.9, 19.8, 21.1, 24.2, 7.5, 69.8, 68.8, 36.4, 5.4, 2.7,
  23.0, 33.2, 41.1, 80.8, 9.4, 54.3, 35.0, 60.1, 23.1, 45.8, 77.3, 90.5, 94.4,
  17.7, 33.2, 25.7, 70.7, 96.3, 48.1, 77.3, 54.0, 76.0, 14.3, 73.9, 22.0, 53.1,
  33.5, 61.9, 45.1, 44.1, 46.5, 55.8, 41.1, 74.2, 50.8, 97.3, 26.5, 60.3, 68.3,
  54.2, 16.1, 72.6, 96.4, 29.0, 32.1, 54.0, 89.0, 29.0, 4.3, 68.4, 55.4, 3.6,
  89.0, 60.6, 65.4, 52.1, 7.6, 58.5, 44.4, 22.7, 37.4, 32.4, 76.1, 30.8, 0.7,
  2.5, 53.0, 12.2, 25.9, 23.2, 70.1, 58.6, 41.0, 76.8, 79.6, 15.1, 46.8, 48.0,
  35.8, 99.4, 78.7, 82.4, 55.3, 18.1, 12.4, 9.1, 27.8, 16.9, 3.0, 6.8, 52.1,
  48.8, 66.8, 61.5, 63.1, 36.4, 14.8, 58.6, 6.3, 27.5, 13.2, 35.3, 93.4, 23.2,
  12.2, 29.1, 10.6, 3.4, 56.3, 80.8, 79.3, 84.2, 1.9, 85.2, 94.0, 19.9, 52.1,
  12.4, 59.4, 35.6, 88.3, 28.4, 70.6, 35.8, 39.5, 26.6, 18.9, 47.8, 54.4, 74.2,
  31.6, 87.3, 65.5, 84.6, 62.6, 18.2, 52.7, 33.3, 64.4, 0.1, 22.9, 74.8, 73.0,
  38.7, 0.3, 1.5, 89.5, 24.5, 34.3, 45.3, 19.2, 22.7, 71.9, 8.3, 62.1, 70.6,
  25.8, 6.5, 47.4, 27.3, 51.0, 18.5, 83.2, 15.9, 2.4, 73.9, 25.7, 43.7, 54.7,
  64.6, 94.0, 46.2, 28.9, 66.5, 22.4, 60.5, 14.7, 65.7, 84.7, 87.5, 32.4, 28.3,
  73.8, 92.9, 5.8, 31.9, 35.4, 84.5, 97.2, 77.3, 10.9, 65.2, 70.3, 33.4, 66.1,
  1.8, 79.8, 3.1, 25.8, 12.1, 94.4, 95.8, 60.6, 33.7, 67.2, 20.1, 15.8, 48.3,
  40.4, 19.0, 52.6, 36.1, 36.5, 85.5, 63.4, 78.8, 49.4, 30.4, 80.9, 33.1, 25.6,
  6.0, 77.5, 6.3, 16.6, 98.8, 46.8, 98.5, 24.9, 10.2, 70.0, 41.9, 16.4, 62.4,
  48.0, 3.8, 49.6, 38.2, 88.0, 57.6, 52.1, 71.0, 34.0, 90.0, 9.4, 5.0, 55.1,
  57.5, 37.4, 74.1, 33.3, 39.9, 20.0, 7.4, 89.4, 35.6, 30.9, 78.4, 25.9, 79.5,
  25.3, 2.7, 98.3, 25.1, 57.9, 1.6, 30.5, 30.0, 8.7, 74.2, 73.9, 22.4, 28.1,
  22.8, 42.5, 30.7, 58.5, 55.2, 81.7, 5.3, 74.1, 50.6, 52.1, 95.9, 81.6, 90.4,
  42.0, 69.7, 20.9, 2.1, 59.5, 80.6, 38.1, 0.9, 59.1, 8.0, 43.1, 82.8, 76.0,
  15.2, 89.5, 14.2, 55.7, 91.5, 63.7, 19.0, 56.7, 99.3, 52.1, 44.8, 53.4, 45.6,
  72.4, 48.0, 67.5, 56.7, 48.4, 99.3, 66.6, 96.1, 95.8, 99.9, 99.6, 96.1, 62.7,
  42.7, 62.9, 9.4, 8.4, 77.4, 81.4, 89.1, 26.3, 91.6, 3.6, 35.1, 9.0, 46.9,
  29.5, 10.2, 12.9, 58.6, 79.5, 57.4, 23.2, 18.7, 92.8, 71.1, 78.1, 54.6, 72.4,
  90.2, 95.0, 76.8, 67.7, 46.9, 13.7, 67.6, 52.1, 60.3, 83.0, 45.3, 60.5, 68.0,
  55.4, 58.4, 34.4, 50.8, 49.0, 94.1, 10.2, 47.7, 26.4, 65.1, 51.2, 40.3, 12.4,
  74.8, 21.6, 86.5, 35.3, 77.7, 36.6, 36.3, 5.9, 84.4, 39.1, 43.2, 49.2, 98.6,
  86.2, 23.0, 44.5, 30.7, 51.0, 83.3, 45.2, 87.7, 90.5, 38.0, 92.1, 24.4, 58.0,
  33.5, 90.9, 73.2, 24.5, 20.3, 67.8, 41.0, 13.0, 62.8, 72.4, 67.4, 34.7,
];
