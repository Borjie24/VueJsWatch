<template>
  <div>
    <h1>Coordinates (WebSocket + Vue Query)</h1>
    <ul v-if="coordinates">
      <li v-for="coord in coordinates" :key="coord.process_id">
        Process ID: {{ coord.process_id }} | Status: {{ coord.operation_status }}
        | X: {{ coord.x }} | Y: {{ coord.y }}
      </li>
    </ul>
    <p v-else>Loading...</p>
  </div>
</template>

<script>
import { io } from "socket.io-client";
import { useQuery } from "@tanstack/vue-query";

export default {
  data() {
    return {
      socket: null,
      coordinates: [],
    };
  },
  methods: {
    fetchCoordinates() {
      return fetch("/api/get-coordinates")
        .then((response) => {
          if (!response.ok) throw new Error("Failed to fetch data");
          return response.json();
        })
        .then((data) => data.data);
    },
    setupWebSocket() {
      this.socket = io("http://localhost:5000");

      this.socket.on("connect", () => {
        console.log("WebSocket connected");
      });

      this.socket.on("disconnect", () => {
        console.log("WebSocket disconnected");
      });

      this.socket.on("update", () => {
        console.log("Real-time update received");
        this.refetchCoordinates(); // Trigger Vue Query refetch
      });
    },
  },
  created() {
    const query = useQuery(["coordinates"], this.fetchCoordinates, {
      onSuccess: (data) => {
        this.coordinates = data;
      },
    });

    this.refetchCoordinates = query.refetch;
    this.setupWebSocket();
  },
  beforeDestroy() {
    if (this.socket) {
      this.socket.disconnect();
    }
  },
};
</script>
